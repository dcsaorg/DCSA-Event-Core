name: Run OVS tests on event core PR

on:
  pull_request:
    branches: [ master ]

jobs:
  OVSTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          server-username: ${{ secrets.DCSA_USER }}
          server-password: ${{ secrets.DCSA_PACKAGES_PAT }}
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v12
        with:
          repositories: '[{ "id": "github", "name": "DCSA Backend repo", "url": "https://maven.pkg.github.com/dcsaorg/DCSA-Core", "releases": { "enabled": "false" }, "snapshots": { "enabled": "true" } }]'
          servers: '[{ "id": "github", "username": "${{ secrets.DCSA_USER }}", "password": "${{ secrets.DCSA_PACKAGES_PAT }}" }]'

      - name: Publish package
        run: mvn -B -X deploy -DskipTests -Dsha1=-${{ github.head_ref }} -Dchangelist=-SNAPSHOT

      - name: set mvn version variable
        run: echo "MAVEN_PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)- " >> $GITHUB_ENV
      - run: echo $MAVEN_PROJECT_VERSION

      - name: Checkout dcsaorg/DCSA-OVS
        uses: actions/checkout@v2.3.1
        with:
          repository: dcsaorg/DCSA-OVS
          ref: master
          path: DCSA-OVS
          submodules: recursive
          token: ${{ secrets.REPO_ACCESS_PAT }}

      - name: Build Operational Vessel Schedules API
        run: cd DCSA-OVS && mvn package -DskipTests -Ddcsa.events.version=$MAVEN_PROJECT_VERSION -Ddcsa.event.tag=${{ github.head_ref }} -Ddcsa.artifacttype=-SNAPSHOT #Get maven package that was just published

      - name: Run the OVS microservice plus database
        run: cd DCSA-OVS && docker-compose -f docker-compose.yml up -d -V

      # Assert that the database is ready to load the test data.
      - run: echo "SELECT 1;" | docker exec -i -u postgres dcsa_db psql -d dcsa_openapi -f - 2>/dev/null || sleep 5

      - name: Load DCSA test data
        run: cat DCSA-OVS/DCSA-Information-Model/datamodel/testdata.d/*.sql | docker exec -i -u postgres dcsa_db psql -d dcsa_openapi -f -

      - name: Checkout dcsaorg/DCSA-API-Validator
        uses: actions/checkout@v2
        with:
          repository: dcsaorg/DCSA-API-Validator
          ref: master
          token: ${{ secrets.REPO_ACCESS_PAT }}
          path: DCSA-API-Validator

      - name: Run API validator
        run: cd DCSA-API-Validator && mvn -Dtest.suite=OVSV2.xml test || (echo "==== OVS logs ====" ; docker logs dcsa-ovs_dcsa-ovs_1; exit 1)
        env:
          client_secret: ${{ secrets.AUTH0_DCSA_CLIENT_SECRET }}
          client_id: 1qEYXCbxWvjeYS8VVm1BfnfZrP3TY9n8
          audience: localhost
          OAuthTokenUri: https://dcsa.eu.auth0.com/oauth/token
          API_ROOT_URI: http://localhost:9090/v2
          CALLBACK_URI: http://172.17.0.1:4567

